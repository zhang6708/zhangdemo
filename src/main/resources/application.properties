#mysql
spring.datasource.url: jdbc:mysql://localhost:3306/test?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8

spring.datasource.username: root
spring.datasource.password: 123456
spring.datasource.driver-class-name: com.mysql.jdbc.Driver
spring.datasource.dbcp2.validation-query: 'select 1'
spring.datasource.dbcp2.test-on-borrow: true
spring.datasource.dbcp2.test-while-idle: true
spring.datasource.dbcp2.time-between-eviction-runs-millis: 27800
spring.datasource.dbcp2.initial-size: 5
spring.datasource.dbcp2.min-idle: 5
spring.datasource.dbcp2.max-idle: 100
spring.datasource.dbcp2.max-wait-millis: 10000

# thymleaf
#spring.thymeleaf.cache : false

mybatis.mapper-locations: classpath:Mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case: true

spring.mvc.static-path-pattern=/static/**
spring.resources.static-locations=classpath:/static/

spring:
thymeleaf:
prefix: classpath:/templates/

#配置日志级别
logging.level.root=INFO

#server.port=8080
#server.servlet.context-path=

#配置指定类的日志级别
#logging.level.com.aocismanage.modules.base.controller=WARN

#定制日志格式
#logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n
#logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n
#
# %d{HH:mm:ss.SSS}――日志输出时间
#
#%thread――输出日志的进程名字，这在Web应用以及异步任务处理中很有用
#
#%-5level――日志级别，并且使用5个字符靠左对齐
#
#%logger- ――日志输出者的名字
#
#%msg――日志消息
#
#%n――平台的换行符